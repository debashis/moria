#! /usr/bin/env bash

read_user_input() {
  url=$1
  output_file=$2
}

convert_ics_to_org() {
  local tmp_file=
  tmp_file=$(mktemp)

  if [[ "$url" == http* ]]; then
    curl -s "$url" > "${tmp_file}"
  else
    cp "$url" "$tmp_file"
  fi

  local tmp_dir=
  tmp_dir=$(mktemp -d)

  sed -n -f $(dirname $0)/ics2org.sed "$tmp_file" | while read line; do
    # cat "$tmp_file" | while read line; do
    IFS=: read key value <<< "$line"
    if [[ "$value" == 1970* ]]; then
      continue
    fi

    local start_date=
    local scheduled_date=

    if [[ "$key" == SUMMARY ]]; then
      echo '00 TODO' "${value}" >> ${tmp_dir}/00.txt
      echo '00 TODO' "${value}" >> ${tmp_dir}/all.txt

    elif [[ "$key" == "DTSTART;TZID"* ]]; then
      start_date=$(echo "$value" | sed -r 's#([0-9]{4})([0-9]{2})([0-9]{2})T([0-9]{2})([0-9]{2})([0-9]{2}).*#\1-\2-\3T\4:\5:\6#')

    elif [[ "$key" == DTSTART ]]; then
      start_date=$(echo "$value" | sed -r 's#([0-9]{4})([0-9]{2})([0-9]{2})T([0-9]{2})([0-9]{2})([0-9]{2}).*#\1-\2-\3T\4:\5:\6Z#')
    fi

    if [[ -n "${start_date}" ]]; then
      scheduled_date=$(date -d "${start_date}" '+%Y-%m-%d %H:%M:%S')
      local now=$(date +%s)
      local future=$(date -d "${start_date}" '+%s')
      if [[ ${future} -gt ${now} ]]; then
        echo "01  SCHEDULED: <${scheduled_date}>" >> ${tmp_dir}/01.txt
        echo "01  SCHEDULED: <${scheduled_date}>" >> ${tmp_dir}/all.txt
      else
        echo "01  COMPLETED: <${scheduled_date}>" >> ${tmp_dir}/01.txt
        echo "01  COMPLETED: <${scheduled_date}>" >> ${tmp_dir}/all.txt
      fi
    fi
  done

  cat ${tmp_dir}/00.txt | while read line; do
    echo "$line" | sed 's#^00 #* #'
    grep -B 1 "$line" "${tmp_dir}/all.txt" | \
      head -1 | \
      sed 's#^01##'
  done

  rm "${tmp_file}"
  rm -r "${tmp_dir}"

}

main() {
  read_user_input "$@"
  convert_ics_to_org "${url}" "${output_file}"
}


main "$@"
