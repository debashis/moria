#! /usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
shopt -s nullglob

read_user_input() {
  url=$1
  #  output_file=$2
}

get_start_date() {
  local line=$1
  IFS=: read key value <<< "$line"

  if [[ "$key" == "DTSTART;TZID"* ]]; then
    echo "$value" | \
      sed -r 's#([0-9]{4})([0-9]{2})([0-9]{2})T([0-9]{2})([0-9]{2})([0-9]{2}).*#\1-\2-\3T\4:\5:\6#'
  elif [[ "$key" == DTSTART ]]; then
    echo "$value" | \
      sed -r 's#([0-9]{4})([0-9]{2})([0-9]{2})T([0-9]{2})([0-9]{2})([0-9]{2}).*#\1-\2-\3T\4:\5:\6Z#'
  else
    echo $line
  fi

}

convert_ics_to_org() {
  local tmp_file=
  tmp_file=$(mktemp)

  if [[ "$url" == http* ]]; then
    curl -s "$url" > "${tmp_file}"
  else
    cp "$url" "$tmp_file"
  fi

  # ensure UNIX line endings
  dos2unix "${tmp_file}" 2> /dev/null

  local tmp_dir=
  tmp_dir=$(mktemp -d)
  local current_year=
  current_year=$(date +%Y)

  local s=
  local current_element=
  local counter=$(mktemp)
  echo 0 > ${counter}


  sed -n -f $(dirname $0)/ics2org.sed "$tmp_file" | while read line; do
    local c=$(< ${counter})
    if [[ "${line}" == "BEGIN:VEVENT" ]]; then
      echo $(( c + 1 )) > ${counter}
      continue
    elif [[ "${line}" == "END:VEVENT" ]]; then
      continue
    else
      echo "$line" >> "${tmp_dir}/${c}.org"
    fi
  done


  for f in ${tmp_dir}/*.org; do
    local start_line=$(egrep "DTSTART" $f)

    if [[ $(egrep "DTSTART.*${current_year}" "$f" | wc -l) -eq 0 ]]; then
      continue
    else

      start_date=$(get_start_date "${start_line}")
      if [[ -n "${start_date}" ]]; then
        scheduled_date=$(date -d "${start_date}" '+%Y-%m-%d %H:%M:%S')
        local now=$(date +%s)
        local future=$(date -d "${start_date}" '+%s')

        if [[ ${future} -gt ${now} ]]; then
          sed -n 's#SUMMARY:#* TODO #p' "${f}"
          echo "  SCHEDULED: <${scheduled_date}>"
        else
          sed -n 's#SUMMARY:#* DONE #p' "${f}"
          echo "  COMPLETED: <${scheduled_date}>"
        fi
        sed -n 's#DESCRIPTION:##p' "${f}" | \
          sed 's#n\([A-Z]\)#\n\1#g' | \
          sed 's#n\([0-9]\)#\n\1#g' | \
          sed 's#n$#\n#g'
      fi
    fi
  done

  rm ${tmp_file}
  rm ${counter}
  rm -r "${tmp_dir}"

}

main() {
  read_user_input "$@"
  convert_ics_to_org "${url}" # "${output_file}"
}


main "$@"
