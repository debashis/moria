#! /usr/bin/env bash

# Uploads pictures to picasa, maintains a local database of which
# files have already been uploaded. Selects the album name based on
# the date of the pictures.

set -euo pipefail

# internals, hands off
dependency_list=$(dirname $0)/../common/indispensable.sh

function bootstrap_thyself() {
  for dependency in $dependency_list; do
    source $dependency  || {
      echo $(basename $0) needs $dependency to run.
      exit 1
    }
  done
}

function create_lock_or_exit_if_exists() {
  if [ -e $lock_file ]; then
      print_and_log "An instance of $(basename $0) is already running." \
                    "If you believe this is incorrect, delete" $lock_file
      exit 1
  fi

  touch $lock_file
}

## $@ : album name
function create_album_if_doesnt_exist() {
  # this test takes ~1 second
  if [ $(google picasa list-albums | grep "$@" | wc -l) -gt 0 ]; then
      return
  fi

  log "Creating new album $@ ..."

  run google picasa create "$@"
}

## $1: file
function upload_to_picasa() {
  if [ $(grep "$@" $state_file 2>/dev/null | wc -l) -gt 0 ]; then
      print_and_log "-> skipping, have already uploaded" $(basename "$@")
      return
  fi

  create_album_if_doesnt_exist "$album_name"
  local start_time=$(date +%s)
  google picasa post "$album_name" "$@" >> $log_file 2>> $log_file
  print_and_log "-> uploaded $(basename $@) in" \
                $(( $(date +%s) - ${start_time} )) \
                "seconds."

  exit_on_error google picasa post "$album_name"
  echo $1 >> $state_file
}

function print_usage_and_exit() {
  cat <<EOF
Usage: $(basename $0) [OPTIONS]"

OPTIONS

--dir     Directory where the pictures reside
--album   Album name to which you want to upload the pictures
--verbose Make $(basename $0) more verbose
EOF

  exit 1
}

function check_input() {
  # default location and album name
  dir=$HOME/pictures/$(date +%Y)/$(date +%Y-%m)
  album_name=$(date "+%B %Y")

  local el=
  for el in "$@"; do
    if [[ "$el" == "--help" ]]; then
        print_usage_and_exit
    elif [[ "$el" == "--album" ]]; then
        next_is_album=1
        album_name=""
    elif [[ "$el" == "--dir" ]]; then
        next_is_album=0
        next_is_dir=1
    elif [[ "$el" == "--verbose" ]]; then
        verbose=1
    elif [[ ${next_is_album-0} -eq 1 ]]; then
        album_name=$el
        next_is_album=0
    elif [[ ${next_is_dir-0} -eq 1 ]]; then
      dir=$el
    fi
  done
}

function remove_lock_file() {
  if [ -e $lock_file ]; then
      rm $lock_file
  fi
}

function main() {
  bootstrap_thyself
  check_input "$@"

  debug album_name=$album_name
  debug dir=$dir

  create_lock_or_exit_if_exists
  log "Started @ $(date)"

  local files=$(find $dir -iname "*.jp*g" 2>/dev/null | sort)
  local number_of_files=$(echo "$files" | wc -l)
  local i=0
  for f in $files; do
    i=$(( i + 1 ))
    print "Uploading file $(basename $f) #"$i "of" $number_of_files "to" $album_name
    upload_to_picasa "$f"
  done

  remove_lock_file
  log "Finished @ $(date)"
}

main "$@"
