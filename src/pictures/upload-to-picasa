#! /usr/bin/env bash

# Uploads pictures to picasa, maintains a local database of which
# files have already been uploaded. Selects the album name based on
# the date of the pictures.

state_file=$HOME/.$(basename $0).state
lock_file=$HOME/.$(basename $0).lock
log_file=$HOME/.$(basename $0).log

function log() {
  echo "$(date) $@" >> $log_file
}

function exit_on_error() {
  if [ $? -gt 0 ]; then
    log "The command [ $@ ] failed :-( Exiting."
    rm lock_file
    exit 1
  fi
}

function run() {
  "$@" >> $log_file 2>> $log_file
  exit_on_error "$@"
}

function create_lock_or_exit_if_exists() {
  if [ -e $lock_file ]; then
    log "An instance of $(basename $0) is already running"
    exit 0
  fi

  touch $lock_file
}

## $@ : album name
function create_album_if_doesnt_exist() {
  # this test takes ~1 second
  if [ $(google picasa list-albums | grep "$@" | wc -l) -gt 0 ]; then
    return
  fi

  log "Creating new album $@ ..."

  # not running google command in run wrapper, seemed to cause
  # problems with passing string arguments around (containing spaces).
  google picasa create "$@" >>$log_file 2>>$log_file
  exit_on_error "$@"
}

## $1: file
function upload_to_picasa() {
  if [ $(grep "$@" $state_file 2>/dev/null | wc -l) -gt 0 ]; then
    return
  fi

  local file_date=$(
    identify -format  "%[EXIF:DateTimeOriginal]" "$1" | \
      sed 's#:#-#g' | \
      cut -d' ' -f1
  )

  local album_name=$(date --date=$file_date "+%B %Y")
  create_album_if_doesnt_exist "$album_name"
  google picasa post "$album_name" "$@" >>$log_file 2>>$log_file
  exit_on_error google picasa post "$album_name"
  echo $1 >> $state_file
}

function check_input() {
  if [[ $1 && ! -d $1 ]]; then
    echo "Usage: $(basename $0) <directory>"
    exit 1
  elif [ $1 ]; then
    dir=$1
  else
    dir=$HOME/pictures/$(date +%Y)
  fi
}

function remove_lock_file() {
  if [ -e $lock_file ]; then
    rm $lock_file
  fi
}

check_input $@
create_lock_or_exit_if_exists
log "Started @ $(date)"

find $dir -iname "*.jp*g" 2>/dev/null | while read f; do
  upload_to_picasa "$f"
done

remove_lock_file
log "Finished @ $(date)"
