#! /usr/bin/env bash

# Command which finds missing JBoss inter module dependencies by
# examining the JBoss log and using find-jar to suggest missing module
# dependencies.
#
# Use this command to investigate which other JBoss modules you need
# to put in the dependency list for the JBoss modules you want to set
# up.
#
# by torstein
#
# Example output:
#
# $ find-missing-jboss-module-dependencies
# from [Module "qfree.central.systemadmin.ticketing.client
#   > Missing dependency:  org.quartz.JobExecutionException
#   > JBoss module containing this dependency: org.quartz

jboss_home=/opt/jboss-eap-6.2
jboss_log=$jboss_home/standalone/log/server.log
maven_repo=$HOME/.m2/repository
#maven_repo=/opt/jboss-eap-6.2.0.GA-maven-repository

function assert_environment_ok() {
  which find-jar &>/dev/null || {
    echo "You need to have find-jar installed."
    exit 1
  }

  if [ ! -r $jboss_log ]; then
    echo "The JBoss log file at" \
      $jboss_log \
      "must exist and be readable." | fmt
    exit 1
  fi
}

function find_dependencies() {
  cat $jboss_log  | \
    egrep "^Caused by: java.lang.ClassNotFoundException:.*Module" | \
    cut -d: -f3 | \
    sed 's/^[ ]*//' | sort | uniq | while read l ; \
    do echo "$l" | \
    cut -d' ' -f2-; \

    local missing_class=$(echo "$l" | cut -d' ' -f1)
    echo "  > Missing dependency: " $missing_class
    echo -n "  > JBoss module containing this dependency: "

    local jboss_module=$(
      find-jar ${jboss_home}/modules/ $missing_class | \
        grep "contains" | \
        sed -e "s#${jboss_home}/modules/##" \
        -e 's#[/]#.#g' \
        -e 's#.main.*##' \
        -e "s#system.layers.base.##"
    )

    if [ -z "$jboss_module" ]; then
      echo "Not found :-("
      echo -n "  > Maven artifact containing this dependency: "
      local jar_containing_class_list=$(
        find-jar ${maven_repo}/ $missing_class | \
          grep "contains" | \
          cut -d' ' -f1
      )

      if [ -z "$jar_containing_class_list" ]; then
        echo "Not found :-("
      else
        echo ""
        for el in $jar_containing_class_list; do
          echo "    >>" $(dirname $el | sed "s#${maven_repo}/##")
        done
      fi

    else
      # if it's found as a jboss module
      echo "$jboss_module"
    fi

  done

}

assert_environment_ok
find_dependencies
