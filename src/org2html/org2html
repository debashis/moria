#! /usr/bin/env bash

header_file=$(dirname $0)/header.html
footer_file=$(dirname $0)/footer.html

output_file=$(mktemp)

src_dir=$HOME/src/skybert-net
org_src_dir=${src_dir}/src

source ../common-lib/indispensable.sh || {
  echo "indispensible.sh is indispensible for $(basename $0)"
  exit 1
}

function create_target_dir() {
  local dir_fragment=$(echo $1 | sed -e "s#${org_src_dir}/##" -e "s/.org$//")
  target_dir=$(dirname $org_src_dir)/generated/$(dirname ${dir_fragment})/$(get_file_name)
  make_dir $target_dir
}

function fix_title() {
  title=$(sed -n 's/^#+TITLE: \(.*\)/\1/p' $1)
  if [ -z "$title" ]; then
    title=$(sed -n 's/^#+title: \(.*\)/\1/p' $1)
  fi
  run sed -i "s~<title>\(.*\)</title>~<title>${title}</title>~" $output_file
}

function get_file_name() {
  echo "$title" | tr '[A-Z]' '[a-z]' | \
    sed 's/[,!?_ ]/-/g'
}

function convert_org_to_html() {
  cat $header_file > $output_file
  sed -f $(dirname $0)/$(basename $0).sed $1 >> $output_file
  cat $footer_file >> $output_file
}

function convert_file() {
  convert_org_to_html $1
  fix_title $1
  create_target_dir $1

  final_fn=${target_dir}/index.shtml

  # HTML pretty printing goes here xmllint --format - etc.
  cat $output_file > $final_fn

  run rm $output_file
  print $final_fn "is now ready"
}

function remove_old_generated_files() {
  if [ -d $src_dir/generated ]; then
    run rm -r $src_dir/generated
  fi
}

remove_old_generated_files

start_time=$(date +%s)
i=0
for f in $(find $org_src_dir -name "*.org"); do
  convert_file "$f"
  i=$((i + 1))
done
end_time=$(date +%s)

print "I converted" $i "org files to HTML in" $((end_time - start_time)) "seconds"
